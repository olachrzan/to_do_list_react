{"version":3,"sources":["useTasks.js","Form/styled.js","Form/index.js","TasksList/styled.js","TasksList/index.js","TextButtons/styled.js","TextButtons/index.js","Section/styled.js","Section/index.js","Container/styled.js","Container/index.js","App.js","reportWebVitals.js","GlobalStyle.js","index.js","theme.js"],"names":["getStoredTasks","storedTasks","localStorage","getItem","JSON","parse","StyledForm","styled","form","theme","breakpoints","mobile","Input","input","Button","colors","teal","white","Form","addNewTask","inputRef","useRef","useState","newTaskContent","setNewTaskContent","onSubmit","event","preventDefault","trimmedNewTaskContent","trim","value","onChange","target","placeholder","ref","autoFocus","type","onClick","current","focus","List","ul","Item","li","hidden","css","Content","span","done","button","green","remove","crimson","TasksList","tasks","hideDone","removeTask","toggleTaskDone","map","task","id","content","Container","div","TextButtons","toggleHideDone","setAllDone","length","disabled","every","StyledSection","section","Header","header","Title","h2","Section","title","extraHeaderContent","body","StyledContainer","main","children","App","setHideDone","setTasks","useEffect","setItem","stringify","filter","useTasks","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyle","createGlobalStyle","gallery","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a90c1a5a.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nconst getStoredTasks = () => {\r\n  const storedTasks = localStorage.getItem(\"tasks\");\r\n\r\n  return storedTasks !== null ? JSON.parse(storedTasks) : [];\r\n};\r\n\r\nexport const useTasks = () => {\r\n\r\n  const [tasks, setTasks] = useState(getStoredTasks);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n  }, [tasks]);\r\n\r\n  const removeTask = (id) => {\r\n    setTasks(tasks => tasks.filter(task => task.id !== id));\r\n  };\r\n\r\n  const toggleTaskDone = (id) => {\r\n    setTasks(tasks => tasks.map(task => {\r\n      if (task.id === id) {\r\n        return { ...task, done: !task.done };\r\n      }\r\n      return task;\r\n    }))\r\n  };\r\n\r\n  const setAllDone = () => {\r\n    setTasks(tasks => tasks.map(task => ({\r\n      ...task,\r\n      done: true,\r\n    })));\r\n  };\r\n\r\n  const addNewTask = (newTaskContent) => {\r\n    setTasks(tasks => [\r\n      ...tasks,\r\n      {\r\n        id: tasks.length === 0 ? 1 : tasks[tasks.length - 1].id + 1,\r\n        content: newTaskContent,\r\n        done: false,\r\n      }\r\n    ])\r\n  };\r\n\r\n  return { tasks, removeTask, toggleTaskDone, setAllDone, addNewTask }\r\n}","import styled from \"styled-components\";\r\n\r\nconst StyledForm = styled.form`\r\n  padding: 20px;\r\n  margin: 0;\r\n  display: flex;\r\n  flex-direction: row;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoints.mobile}) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nconst Input = styled.input`\r\n  flex-grow: 1;\r\n  margin-right: 10px;\r\n  padding: 8px;\r\n  border: 2px solid #ddd;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoints.mobile}) {\r\n    margin: 0 0 10px 0;\r\n  }\r\n`;\r\n\r\nconst Button = styled.input`\r\n  padding: 9px;\r\n  background-color: ${({ theme }) => theme.colors.teal};\r\n  color: ${({ theme }) => theme.colors.white};\r\n  border: none;\r\n  transition: filter 0.4s, transform 0.4s;\r\n\r\n  &:hover {\r\n    filter: brightness(110%);\r\n    transform: scale(1.04);\r\n    cursor: pointer;\r\n  }\r\n\r\n  &:active {\r\n    filter: brightness(120%);\r\n  }\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoints.mobile}) {\r\n    flex-grow: 1;\r\n  }\r\n`;\r\n\r\nexport { StyledForm, Input, Button };","import { useRef, useState } from \"react\";\r\nimport { StyledForm, Input, Button } from \"./styled\";\r\n\r\nconst Form = ({ addNewTask }) => {\r\n   const inputRef = useRef(null);\r\n   const [newTaskContent, setNewTaskContent] = useState(\"\");\r\n\r\n   const onFormSubmit = (event) => {\r\n      event.preventDefault();\r\n      const trimmedNewTaskContent = newTaskContent.trim();\r\n      if (trimmedNewTaskContent === \"\") {\r\n         return\r\n      }\r\n      addNewTask(trimmedNewTaskContent);\r\n      setNewTaskContent(\"\");\r\n   };\r\n\r\n   return (\r\n      <StyledForm onSubmit={onFormSubmit}>\r\n         <Input\r\n            value={newTaskContent}\r\n            onChange={({ target }) => setNewTaskContent(target.value)}\r\n            placeholder=\"Co jest do zrobienia?\"\r\n            ref={inputRef}\r\n            autoFocus\r\n         />\r\n         <Button\r\n            type=\"submit\"\r\n            value=\"Dodaj zadanie\"\r\n            onClick={() => inputRef.current.focus()}\r\n         />\r\n      </StyledForm>\r\n   )\r\n};\r\n\r\nexport default Form;","import styled, { css } from \"styled-components\";\r\n\r\nconst List = styled.ul`\r\n  padding: 20px;\r\n  margin: 0;\r\n  list-style: none;\r\n`;\r\n\r\nconst Item = styled.li`\r\n  padding: 10px;\r\n  border-bottom: 2px solid #eee;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  ${({ hidden }) => hidden && css`\r\n    display: none;\r\n  `}\r\n`;\r\n\r\nconst Content = styled.span`\r\n  margin: 0 15px;\r\n  flex-grow: 1;\r\n\r\n  ${({ done }) => done && css`\r\n    text-decoration: line-through;\r\n  `}\r\n`;\r\n\r\nconst Button = styled.button`\r\n  height: 25px;\r\n  width: 25px;\r\n  background-color: ${({ theme }) => theme.colors.green};\r\n  color: ${({ theme }) => theme.colors.white};\r\n  border: none;\r\n  font-size: 14px;\r\n  flex-shrink: 0;\r\n  transition: filter 0.4s;\r\n\r\n  &:hover {\r\n    filter: brightness(110%);\r\n    cursor: pointer;\r\n  }\r\n\r\n  &:active {\r\n    filter: brightness(120%);\r\n  }\r\n\r\n  ${({ remove }) => remove && css`\r\n    background-color: ${({ theme }) => theme.colors.crimson};\r\n  `}\r\n`;\r\n\r\nexport { List, Item, Content, Button };","import { List, Item, Content, Button } from \"./styled\";\r\n\r\nconst TasksList = ({ tasks, hideDone, removeTask, toggleTaskDone }) => (\r\n   <List>\r\n      {tasks.map(task => (\r\n         <Item\r\n            key={task.id}\r\n            hidden={task.done && hideDone}\r\n         >\r\n            <Button onClick={() => toggleTaskDone(task.id)} >\r\n               {task.done ? \"✔\" : \"\"}\r\n            </Button>\r\n            <Content done={task.done} >\r\n               {task.content}\r\n            </Content>\r\n            <Button\r\n               remove\r\n               onClick={() => removeTask(task.id)}\r\n            >\r\n               🗑\r\n            </Button>\r\n         </Item>\r\n      ))}\r\n   </List >\r\n);\r\n\r\nexport default TasksList;","import styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoints.mobile}) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  margin-left: 30px;\r\n  padding: 0;\r\n  border: none;\r\n  background-color: transparent;\r\n  color: ${({ theme }) => theme.colors.teal};\r\n  transition: filter 0.4s;\r\n\r\n  &:hover {\r\n    filter: brightness(110%);\r\n    cursor: pointer;\r\n  }\r\n\r\n  &:active {\r\n    filter: brightness(120%);\r\n  }\r\n\r\n  &:disabled {\r\n    color: #aaa;\r\n    cursor: default;\r\n  }\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoints.mobile}) {\r\n    margin: 20px 0 0 0;\r\n  }\r\n`;\r\n\r\nexport { Container, Button };","import { Container, Button } from \"./styled\";\r\n\r\nconst TextButtons = ({ tasks, hideDone, toggleHideDone, setAllDone }) => {\r\n\tif (tasks.length === 0)\r\n\t\treturn null;\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Button onClick={toggleHideDone} >\r\n\t\t\t\t{hideDone ? \"Pokaż\" : \"Ukryj\"} ukończone\r\n\t\t\t</Button>\r\n\t\t\t<Button\r\n\t\t\t\tonClick={setAllDone}\r\n\t\t\t\tdisabled={tasks.every(({ done }) => done)}\r\n\t\t\t>\r\n\t\t\t\tUkończ wszystkie\r\n\t\t\t</Button>\r\n\t\t</Container>\r\n\t)\r\n};\r\n\r\nexport default TextButtons;","import styled from \"styled-components\";\r\n\r\nconst StyledSection = styled.section`\r\n  background-color: ${({ theme }) => theme.colors.white};\r\n  padding: 0;\r\n  margin-bottom: 10px;\r\n  box-shadow: 0 0 7px #ddd;\r\n`;\r\n\r\nconst Header = styled.header`\r\n  border-bottom: 2px solid #eee;\r\n  padding: 20px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoints.mobile}) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  font-size: 20px;\r\n  margin: 0;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoints.mobile}) {\r\n    align-self: flex-start;\r\n  }\r\n`;\r\n\r\nexport { StyledSection, Header, Title };","import { StyledSection, Header, Title } from \"./styled\";\r\n\r\nconst Section = ({ title, extraHeaderContent, body }) => (\r\n   <StyledSection>\r\n      <Header>\r\n         <Title>{title}</Title>\r\n         {extraHeaderContent}\r\n      </Header>\r\n      <div>{body}</div>\r\n   </StyledSection>\r\n);\r\n\r\nexport default Section;","import styled from \"styled-components\";\r\n\r\nexport const StyledContainer = styled.main`\r\n  max-width: 900px;\r\n  margin: 50px auto;\r\n`;","import { StyledContainer } from \"./styled\";\r\n\r\nconst Container = ({children}) => (\r\n   <StyledContainer>\r\n      {children}\r\n   </StyledContainer>\r\n);\r\n\r\nexport default Container;","import { useState } from \"react\";\nimport { useTasks } from \"./useTasks\";\nimport Form from \"./Form\";\nimport TasksList from \"./TasksList\";\nimport TextButtons from \"./TextButtons\";\nimport Section from \"./Section\";\nimport Container from \"./Container\";\n\nfunction App() {\n\tconst [hideDone, setHideDone] = useState(false);\n\n\tconst toggleHideDone = () => {\n\t\tsetHideDone(hideDone => !hideDone);\n\t};\n\n\tconst { tasks, removeTask, toggleTaskDone, setAllDone, addNewTask } = useTasks();\n\n\treturn (\n\t\t<Container>\n\t\t\t<h1>Lista zadań</h1>\n\t\t\t<Section\n\t\t\t\ttitle=\"Dodaj nowe zadanie\"\n\t\t\t\tbody={<Form addNewTask={addNewTask} />}\n\t\t\t/>\n\t\t\t<Section\n\t\t\t\ttitle=\"Lista zadań\"\n\t\t\t\textraHeaderContent={\n\t\t\t\t\t<TextButtons\n\t\t\t\t\t\ttasks={tasks}\n\t\t\t\t\t\thideDone={hideDone}\n\t\t\t\t\t\ttoggleHideDone={toggleHideDone}\n\t\t\t\t\t\tsetAllDone={setAllDone}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\tbody={\n\t\t\t\t\t<TasksList\n\t\t\t\t\t\ttasks={tasks}\n\t\t\t\t\t\thideDone={hideDone}\n\t\t\t\t\t\tremoveTask={removeTask}\n\t\t\t\t\t\ttoggleTaskDone={toggleTaskDone}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t/>\n\t\t</Container>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  html {\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  *, ::after, ::before {\r\n    box-sizing: inherit;\r\n  }\r\n\r\n  body {\r\n    word-break: break-word;\r\n    background-color: ${({ theme }) => theme.colors.gallery};\r\n    font-family: 'Open Sans', sans-serif;\r\n    padding: 0 20px;\r\n  }\r\n`;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ThemeProvider } from 'styled-components';\nimport { theme } from './theme'\nimport { GlobalStyle } from './GlobalStyle';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const theme = {\r\n\tcolors: {\r\n\t\tteal: \"#008080\",\r\n\t\tgallery: \"#EFEFEF\",\r\n\t\twhite: \"#FFFFFF\",\r\n\t\tgreen: \"#008000\",\r\n\t\tcrimson: \"#DB143C\",\r\n\t},\r\n\tbreakpoints: {\r\n\t\tmobile: \"768px\",\r\n\t},\r\n}"],"sourceRoot":""}