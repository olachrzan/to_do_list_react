{"version":3,"sources":["common/Navigation/styled.js","common/Navigation/index.js","common/Section/styled.js","common/Section/index.js","common/Container/styled.js","common/Container/index.js","features/author/styled.js","features/author/index.js","features/tasks/tasksLocalStorage.js","features/tasks/tasksSlice.js","features/tasks/TasksPage/Input/styled.js","features/tasks/TasksPage/Form/styled.js","features/tasks/TasksPage/Form/index.js","features/tasks/TasksPage/queryParameters.js","features/tasks/TasksPage/searchQueryParamName.js","features/tasks/TasksPage/TasksList/styled.js","features/tasks/TasksPage/TasksList/index.js","features/tasks/TasksPage/textButtons/styled.js","features/tasks/TasksPage/textButtons/DoneTasksButtons/index.js","features/tasks/TasksPage/textButtons/ExampleTasksButton/index.js","features/tasks/TasksPage/Search/styled.js","features/tasks/TasksPage/Search/index.js","features/tasks/TasksPage/index.js","features/tasks/TaskPage/styled.js","features/tasks/TaskPage/index.js","App.js","reportWebVitals.js","GlobalStyle.js","features/tasks/getExampleTasks.js","features/tasks/tasksSaga.js","rootSaga.js","store.js","index.js","theme.js"],"names":["NavigationBar","styled","nav","theme","colors","teal","List","ul","ListItem","li","Link","NavLink","white","Navigation","to","Wrapper","section","Header","header","breakpoints","small","Title","h2","Section","title","extraHeaderContent","body","main","Container","children","Content","p","last","css","AuthorPage","localStorageKey","saveTasksInLocalStorage","tasks","localStorage","setItem","JSON","stringify","tasksSlice","createSlice","name","initialState","parse","getItem","loading","hideDone","reducers","addTask","newTaskObject","payload","push","removeTask","taskId","index","findIndex","id","splice","toggleTaskDone","done","toggleHideDone","state","setAllDone","fetchExampleTasks","fetchExampleTasksSuccess","concat","fetchExampleTasksFailure","actions","selectTasksSlice","selectTasks","selectLoading","selectHideDone","selectTasksId","selectAreTasksEmpty","length","selectIsEveryTaskDone","every","Input","input","shorter","medium","NewTaskForm","form","Button","Form","inputRef","useRef","useState","newTaskContent","setNewTaskContent","dispatch","useDispatch","onSubmit","event","preventDefault","trimmedNewTaskContent","trim","content","nanoid","value","onChange","target","placeholder","ref","autoFocus","type","onClick","current","focus","useQueryParameter","key","location","useLocation","URLSearchParams","search","get","searchQueryParamName","Item","hidden","span","TaskLink","button","green","remove","crimson","TasksList","query","useSelector","filter","toUpperCase","includes","selectTasksByQuery","map","task","div","DoneTasksButtons","areTasksEmpty","isEveryTaskDone","disabled","ExampleTasksButton","Search","replaceQueryParameter","history","useHistory","searchParams","undefined","delete","set","pathname","toString","useReplaceQueryParameter","TasksPage","TaskDetails","TaskPage","useParams","find","getTaskById","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyle","createGlobalStyle","gallery","getExampleTasks","a","fetch","response","ok","Error","statusText","json","fetchExampleTasksHandler","saveTasksInLocalStorageHandler","tasksSaga","delay","call","exampleTasks","put","alert","select","takeEvery","rootSaga","all","sagaMiddleware","createSagaMiddleware","store","configureStore","reducer","tasksReducer","middleware","run","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.87ef160e.chunk.js","sourcesContent":["import { NavLink } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const NavigationBar = styled.nav`\r\n  background-color: ${({ theme }) => theme.colors.teal};\r\n`;\r\n\r\nexport const List = styled.ul`\r\n  margin: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const ListItem = styled.li`\r\n  list-style: none;\r\n  padding: 20px;\r\n  letter-spacing: 0.5px;\r\n  transition: transform 0.2s linear;\r\n\r\n  &:hover {\r\n    transform: scale(1.1);\r\n  }\r\n`;\r\n\r\nexport const Link = styled(NavLink)`\r\n  color: ${({ theme }) => theme.colors.white};\r\n  text-decoration: none;\r\n\r\n  &.active {\r\n    font-weight: bold;\r\n  }\r\n\r\n`;","import { NavigationBar, List, ListItem, Link } from \"./styled\";\r\n\r\nconst Navigation = () => (\r\n  <NavigationBar>\r\n    <List>\r\n      <ListItem><Link to=\"/zadania\">Zadania</Link></ListItem>\r\n      <ListItem><Link to=\"/autor\">O autorze</Link></ListItem>\r\n    </List>\r\n  </NavigationBar>\r\n);\r\n\r\nexport default Navigation;","import styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.section`\r\n  background-color: ${({ theme }) => theme.colors.white};\r\n  padding: 0;\r\n  margin-bottom: 10px;\r\n  box-shadow: 0 0 7px #ddd;\r\n`;\r\n\r\nconst Header = styled.header`\r\n  border-bottom: 2px solid #eee;\r\n  padding: 20px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoints.small}) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  font-size: 20px;\r\n  margin: 0;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoints.small}) {\r\n    align-self: flex-start;\r\n  }\r\n`;\r\n\r\nexport { Wrapper, Header, Title };","import { Wrapper, Header, Title } from \"./styled\";\r\n\r\nconst Section = ({ title, extraHeaderContent, body }) => (\r\n\t<Wrapper>\r\n\t\t<Header>\r\n\t\t\t<Title>{title}</Title>\r\n\t\t\t{extraHeaderContent}\r\n\t\t</Header>\r\n\t\t<div>{body}</div>\r\n\t</Wrapper>\r\n);\r\n\r\nexport default Section;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.main`\r\n  max-width: 900px;\r\n  margin: 50px auto;\r\n  padding: 0 20px;\r\n`;","import { Wrapper } from \"./styled\";\r\n\r\nconst Container = ({ children }) => (\r\n\t<Wrapper>\r\n\t\t{children}\r\n\t</Wrapper>\r\n);\r\n\r\nexport default Container;","import styled, { css } from \"styled-components\";\r\n\r\nexport const Content = styled.p`\r\n  margin: 0;\r\n  padding: 30px 20px 10px;\r\n  ${({ last }) => last && css`\r\n    padding-top: 0;\r\n    padding-bottom: 30px;\r\n  `}\r\n`;","import Section from \"../../common/Section\";\r\nimport Container from \"../../common/Container\";\r\nimport { Content } from \"./styled\";\r\n\r\nconst AuthorPage = () => {\r\n\r\n  return (\r\n    <Container>\r\n      <h1>O autorze</h1>\r\n      <Section\r\n        title=\"Ola Chrzan\"\r\n        body={\r\n          <>\r\n            <Content>\r\n              Cześć! Mam na imię Ola i mieszkam w Gdańsku. Bardzo lubię to miasto, chociaż mogłoby być tu więcej escape roomów 😜 Mieszkam przy lesie, niedaleko plaży, więc często chodzę na spacery. Lubię czytać książki popularonaukowe i uczyć się nowych rzeczy.\r\n            </Content>\r\n            <Content last>\r\n              Pisaniem stron internetowych zaczęłam interesować się w 2020 roku. A strona, na której jesteś, jest efektem kursu, który podjęłam w celu rozwinięcia swoich umiejętności frontendowych.\r\n            </Content>\r\n          </>\r\n        }\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default AuthorPage;","const localStorageKey = \"tasks\";\r\n\r\nexport const saveTasksInLocalStorage = tasks =>\r\n  localStorage.setItem(localStorageKey, JSON.stringify(tasks));\r\n\r\nexport const getTasksFromLocalStorage = () =>\r\n  JSON.parse(localStorage.getItem(localStorageKey)) || [];","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { getTasksFromLocalStorage } from \"./tasksLocalStorage\";\r\n\r\nconst tasksSlice = createSlice({\r\n  name: \"tasks\",\r\n  initialState: {\r\n    tasks: getTasksFromLocalStorage(),\r\n    loading: false,\r\n    hideDone: false,\r\n  },\r\n  reducers: {\r\n    addTask: ({ tasks }, { payload: newTaskObject }) => {\r\n      tasks.push(newTaskObject);\r\n    },\r\n    removeTask: ({ tasks }, { payload: taskId }) => {\r\n      const index = tasks.findIndex(({ id }) => id === taskId);\r\n      tasks.splice(index, 1)\r\n    },\r\n    toggleTaskDone: ({ tasks }, { payload: taskId }) => {\r\n      const index = tasks.findIndex(({ id }) => id === taskId);\r\n      tasks[index].done = !tasks[index].done\r\n    },\r\n    toggleHideDone: state => {\r\n      state.hideDone = !state.hideDone;\r\n    },\r\n    setAllDone: ({ tasks }) => {\r\n      for (const task of tasks) {\r\n        task.done = true;\r\n      }\r\n    },\r\n    fetchExampleTasks: state => {\r\n      state.loading = true;\r\n    },\r\n    fetchExampleTasksSuccess: (state, { payload: tasks }) => {\r\n      state.tasks = tasks.concat(state.tasks);\r\n      state.loading = false;\r\n    },\r\n    fetchExampleTasksFailure: state => {\r\n      state.loading = false;\r\n    }\r\n  }\r\n});\r\n\r\nexport const {\r\n  addTask,\r\n  removeTask,\r\n  toggleTaskDone,\r\n  toggleHideDone,\r\n  setAllDone,\r\n  fetchExampleTasks,\r\n  fetchExampleTasksSuccess,\r\n  fetchExampleTasksFailure,\r\n} = tasksSlice.actions;\r\n\r\nconst selectTasksSlice = state => state.tasks;\r\n\r\nexport const selectTasks = state => selectTasksSlice(state).tasks;\r\nexport const selectLoading = state => selectTasksSlice(state).loading;\r\nexport const selectHideDone = state => selectTasksSlice(state).hideDone;\r\n\r\nexport const selectTasksId = state => {\r\n  const tasks = selectTasks(state);\r\n  for (const task of tasks) {\r\n    return task.id\r\n  }\r\n};\r\n\r\nexport const selectAreTasksEmpty = state => selectTasks(state).length === 0;\r\nexport const selectIsEveryTaskDone = state => selectTasks(state).every(({ done }) => done);\r\n\r\nexport const getTaskById = (state, taskId) => selectTasks(state).find(({ id }) => id === taskId);\r\n\r\nexport const selectTasksByQuery = (state, query) => {\r\n  const tasks = selectTasks(state);\r\n\r\n  if (!query || query.trim() === \"\") {\r\n    return tasks;\r\n  }\r\n  return tasks.filter(({ content }) =>\r\n    content.toUpperCase().includes(query.trim().toUpperCase()));\r\n};\r\n\r\nexport default tasksSlice.reducer;","import styled, { css } from \"styled-components\";\r\n\r\nexport const Input = styled.input`\r\n  padding: 8px;\r\n  border: 2px solid #ddd;\r\n\r\n  ${({ shorter }) => shorter && css`\r\n    flex-grow: 1;\r\n    margin-right: 10px;\r\n\r\n    @media (max-width: ${({ theme }) => theme.breakpoints.medium}) {\r\n      margin: 0 0 10px 0;\r\n    }\r\n  `};\r\n`;","import styled from \"styled-components\";\r\n\r\nconst NewTaskForm = styled.form`\r\n  padding: 20px;\r\n  margin: 0;\r\n  display: flex;\r\n  flex-direction: row;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoints.medium}) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nconst Button = styled.input`\r\n  padding: 9px;\r\n  background-color: ${({ theme }) => theme.colors.teal};\r\n  color: ${({ theme }) => theme.colors.white};\r\n  border: none;\r\n  transition: filter 0.4s, transform 0.4s;\r\n\r\n  &:hover {\r\n    filter: brightness(110%);\r\n    transform: scale(1.04);\r\n    cursor: pointer;\r\n  }\r\n\r\n  &:active {\r\n    filter: brightness(120%);\r\n  }\r\n`;\r\n\r\nexport { NewTaskForm, Button };","import { nanoid } from \"@reduxjs/toolkit\";\r\nimport { useRef, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addTask } from \"../../tasksSlice\";\r\nimport { Input } from \"../Input/styled\";\r\nimport { NewTaskForm, Button } from \"./styled\";\r\n\r\nconst Form = () => {\r\n\tconst inputRef = useRef(null);\r\n\tconst [newTaskContent, setNewTaskContent] = useState(\"\");\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst onFormSubmit = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tconst trimmedNewTaskContent = newTaskContent.trim();\r\n\t\tif (trimmedNewTaskContent === \"\") {\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tdispatch(addTask({\r\n\t\t\tcontent: trimmedNewTaskContent,\r\n\t\t\tdone: false,\r\n\t\t\tid: nanoid()\r\n\t\t}));\r\n\r\n\t\tsetNewTaskContent(\"\");\r\n\t};\r\n\r\n\treturn (\r\n\t\t<NewTaskForm onSubmit={onFormSubmit}>\r\n\t\t\t<Input\r\n\t\t\t\tshorter\r\n\t\t\t\tvalue={newTaskContent}\r\n\t\t\t\tonChange={({ target }) => setNewTaskContent(target.value)}\r\n\t\t\t\tplaceholder=\"Co jest do zrobienia?\"\r\n\t\t\t\tref={inputRef}\r\n\t\t\t\tautoFocus\r\n\t\t\t/>\r\n\t\t\t<Button\r\n\t\t\t\ttype=\"submit\"\r\n\t\t\t\tvalue=\"Dodaj zadanie\"\r\n\t\t\t\tonClick={() => inputRef.current.focus()}\r\n\t\t\t/>\r\n\t\t</NewTaskForm>\r\n\t)\r\n};\r\n\r\nexport default Form;","import { useHistory, useLocation } from \"react-router\";\r\n\r\nexport const useQueryParameter = (key) => {\r\n  const location = useLocation();\r\n  return (new URLSearchParams(location.search)).get(key)\r\n};\r\n\r\nexport const useReplaceQueryParameter = () => {\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const searchParams = new URLSearchParams(location.search);\r\n\r\n  return ({ key, value }) => {\r\n    if (value === undefined) {\r\n      searchParams.delete(key);\r\n    } else {\r\n      searchParams.set(key, value);\r\n    }\r\n    history.push(`${location.pathname}?${searchParams.toString()}`);\r\n  }\r\n};","export const searchQueryParamName = \"szukaj\";","import { Link } from \"react-router-dom\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nconst List = styled.ul`\r\n  padding: 20px;\r\n  margin: 0;\r\n  list-style: none;\r\n`;\r\n\r\nconst Item = styled.li`\r\n  padding: 10px;\r\n  border-bottom: 2px solid #eee;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  ${({ hidden }) => hidden && css`\r\n    display: none;\r\n  `}\r\n`;\r\n\r\nconst Content = styled.span`\r\n  margin: 0 15px;\r\n  flex-grow: 1;\r\n\r\n  ${({ done }) => done && css`\r\n    text-decoration: line-through;\r\n  `}\r\n`;\r\n\r\nconst TaskLink = styled(Link)`\r\n  text-decoration: none;\r\n  color: ${({ theme }) => theme.colors.teal};\r\n\r\n  &:hover {\r\n    filter: brightness(110%);\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  height: 25px;\r\n  width: 25px;\r\n  background-color: ${({ theme }) => theme.colors.green};\r\n  color: ${({ theme }) => theme.colors.white};\r\n  border: none;\r\n  font-size: 14px;\r\n  flex-shrink: 0;\r\n  transition: filter 0.4s;\r\n\r\n  &:hover {\r\n    filter: brightness(110%);\r\n    cursor: pointer;\r\n  }\r\n\r\n  &:active {\r\n    filter: brightness(120%);\r\n  }\r\n\r\n  ${({ remove }) => remove && css`\r\n    background-color: ${({ theme }) => theme.colors.crimson};\r\n  `}\r\n`;\r\n\r\nexport { List, Item, Content, TaskLink, Button };","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectTasksByQuery, selectHideDone, toggleTaskDone, removeTask } from \"../../tasksSlice\";\r\nimport { useQueryParameter } from \"../queryParameters\";\r\nimport { searchQueryParamName } from \"../searchQueryParamName\";\r\nimport { List, Item, Content, Button, TaskLink } from \"./styled\";\r\n\r\nconst TasksList = () => {\r\n\tconst query = useQueryParameter(searchQueryParamName);\r\n\r\n\tconst tasks = useSelector(state => selectTasksByQuery(state, query));\r\n\tconst hideDone = useSelector(selectHideDone);\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\treturn (\r\n\t\t<List>\r\n\t\t\t{tasks.map(task => (\r\n\t\t\t\t<Item\r\n\t\t\t\t\tkey={task.id}\r\n\t\t\t\t\thidden={task.done && hideDone}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Button onClick={() => dispatch(toggleTaskDone(task.id))} >\r\n\t\t\t\t\t\t{task.done ? \"✔\" : \"\"}\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Content done={task.done} >\r\n\t\t\t\t\t\t<TaskLink to={`/zadania/${task.id}`}>{task.content}</TaskLink>\r\n\t\t\t\t\t</Content>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tremove\r\n\t\t\t\t\t\tonClick={() => dispatch(removeTask(task.id))}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t🗑\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Item>\r\n\t\t\t))}\r\n\t\t</List >\r\n\t)\r\n};\r\n\r\nexport default TasksList;","import styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoints.small}) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  margin-left: 30px;\r\n  padding: 0;\r\n  border: none;\r\n  background-color: transparent;\r\n  color: ${({ theme }) => theme.colors.teal};\r\n  transition: filter 0.4s;\r\n\r\n  &:hover {\r\n    filter: brightness(110%);\r\n    cursor: pointer;\r\n  }\r\n\r\n  &:active {\r\n    filter: brightness(120%);\r\n  }\r\n\r\n  &:disabled {\r\n    color: #aaa;\r\n    cursor: default;\r\n  }\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoints.small}) {\r\n    margin: 20px 0 0 0;\r\n  }\r\n`;\r\n\r\nexport { Container, Button };","import { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n\tselectHideDone,\r\n\tselectAreTasksEmpty,\r\n\tselectIsEveryTaskDone,\r\n\ttoggleHideDone,\r\n\tsetAllDone\r\n} from \"../../../tasksSlice\";\r\nimport { Container, Button } from \"../styled\";\r\n\r\nconst DoneTasksButtons = () => {\r\n\tconst hideDone = useSelector(selectHideDone);\r\n\tconst areTasksEmpty = useSelector(selectAreTasksEmpty);\r\n\tconst isEveryTaskDone = useSelector(selectIsEveryTaskDone);\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tif (areTasksEmpty)\r\n\t\treturn null;\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Button onClick={() => dispatch(toggleHideDone())} >\r\n\t\t\t\t{hideDone ? \"Pokaż\" : \"Ukryj\"} ukończone\r\n\t\t\t</Button>\r\n\t\t\t<Button\r\n\t\t\t\tonClick={() => dispatch(setAllDone())}\r\n\t\t\t\tdisabled={isEveryTaskDone}\r\n\t\t\t>\r\n\t\t\t\tUkończ wszystkie\r\n\t\t\t</Button>\r\n\t\t</Container>\r\n\t)\r\n};\r\n\r\nexport default DoneTasksButtons;","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchExampleTasks, selectTasksId, selectLoading } from \"../../../tasksSlice\";\r\nimport { Button } from \"../styled\";\r\n\r\nconst ExampleTasksButton = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst loading = useSelector(selectLoading);\r\n\tconst taskId = useSelector(selectTasksId);\r\n\r\n\treturn (\r\n\t\t<Button\r\n\t\t\tdisabled={loading || taskId === \"Fis3G6NsVjamc56tA-MlC\" || taskId === \"2931yO2GKzfC6VG743XzR\"}\r\n\t\t\tonClick={() => dispatch(fetchExampleTasks())}\r\n\t\t>\r\n\t\t\t{\r\n\t\t\t\tloading\r\n\t\t\t\t\t? \"Ładowanie...\"\r\n\t\t\t\t\t: (taskId === \"Fis3G6NsVjamc56tA-MlC\" || taskId === \"2931yO2GKzfC6VG743XzR\"\r\n\t\t\t\t\t\t? \"Pobrano przykładowe zadania\"\r\n\t\t\t\t\t\t: \"Pobierz przykładowe zadania\")}\r\n\t\t</Button>\r\n\t)\r\n};\r\n\r\nexport default ExampleTasksButton;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  padding: 20px;\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n`;","import { Input } from \"../Input/styled\";\r\nimport { useQueryParameter, useReplaceQueryParameter } from \"../queryParameters\";\r\nimport { searchQueryParamName } from \"../searchQueryParamName\";\r\nimport { Wrapper } from \"./styled\";\r\n\r\nconst Search = () => {\r\n  const query = useQueryParameter(searchQueryParamName);\r\n  const replaceQueryParameter = useReplaceQueryParameter();\r\n\r\n  const OnInputChange = ({ target }) => {\r\n    replaceQueryParameter({\r\n      key: searchQueryParamName,\r\n      value: target.value.trim() !== \"\" ? target.value : undefined,\r\n    })\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Input\r\n        placeholder=\"Filtruj zadania\"\r\n        value={query || \"\"}\r\n        onChange={OnInputChange}\r\n      />\r\n    </Wrapper>\r\n  )\r\n};\r\n\r\nexport default Search;","import Form from \"./Form\";\r\nimport TasksList from \"./TasksList\";\r\nimport DoneTasksButtons from \"./textButtons/DoneTasksButtons\";\r\nimport Section from \"../../../common/Section\";\r\nimport Container from \"../../../common/Container\";\r\nimport ExampleTasksButton from \"./textButtons/ExampleTasksButton\";\r\nimport Search from \"./Search\";\r\n\r\nconst TasksPage = () => {\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<h1>Lista zadań</h1>\r\n\t\t\t<Section\r\n\t\t\t\ttitle=\"Dodaj nowe zadanie\"\r\n\t\t\t\textraHeaderContent={<ExampleTasksButton />}\r\n\t\t\t\tbody={<Form />}\r\n\t\t\t/>\r\n\t\t\t<Section\r\n\t\t\t\ttitle=\"Znajdź zadanie\"\r\n\t\t\t\tbody={<Search />}\r\n\t\t\t/>\r\n\t\t\t<Section\r\n\t\t\t\ttitle=\"Lista zadań\"\r\n\t\t\t\textraHeaderContent={<DoneTasksButtons />}\r\n\t\t\t\tbody={<TasksList />}\r\n\t\t\t/>\r\n\t\t</Container>\r\n\t);\r\n}\r\n\r\nexport default TasksPage;\r\n","import styled from \"styled-components\";\r\n\r\nexport const TaskDetails = styled.p`\r\n  margin: 0;\r\n  padding: 30px 20px;\r\n\r\n`;","import { useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router\";\r\nimport Container from \"../../../common/Container\";\r\nimport Section from \"../../../common/Section\";\r\nimport { getTaskById } from \"../tasksSlice\";\r\nimport { TaskDetails } from \"./styled\";\r\n\r\nconst TaskPage = () => {\r\n  const { id } = useParams();\r\n  const task = useSelector(state => getTaskById(state, id));\r\n\r\n  return (\r\n    <Container>\r\n      <h1>Szczegóły zadania</h1>\r\n      <Section\r\n        title={task ? task.content : \"Nie znaleziono zadania :(\"}\r\n        body={\r\n          task\r\n            ? <TaskDetails>\r\n              <strong>Ukończone: </strong>{task.done ? \"Tak\" : \"Nie\"}\r\n            </TaskDetails>\r\n            : null\r\n        }\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default TaskPage;","import { HashRouter, Switch, Route, Redirect } from \"react-router-dom\"\r\nimport Navigation from \"./common/Navigation\"\r\nimport AuthorPage from \"./features/author\"\r\nimport TasksPage from \"./features/tasks/TasksPage\";\r\nimport TaskPage from \"./features/tasks/TaskPage\";\r\n\r\nexport const App = () => (\r\n  <HashRouter>\r\n    <Navigation />\r\n    <Switch>\r\n      <Route path=\"/zadania/:id\">\r\n        <TaskPage />\r\n      </Route>\r\n      <Route path=\"/zadania\">\r\n        <TasksPage />\r\n      </Route>\r\n      <Route path=\"/autor\">\r\n        <AuthorPage />\r\n      </Route>\r\n      <Route path=\"/\">\r\n        <Redirect to=\"/zadania\" />\r\n      </Route>\r\n    </Switch>\r\n  </HashRouter>\r\n)","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  html {\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  *, ::after, ::before {\r\n    box-sizing: inherit;\r\n  }\r\n\r\n  body {\r\n    word-break: break-word;\r\n    background-color: ${({ theme }) => theme.colors.gallery};\r\n    font-family: 'Open Sans', sans-serif;\r\n    line-height: 150%;\r\n  }\r\n`;","export const getExampleTasks = async () => {\r\n  const response = await fetch(\"/to_do_list_react/exampleTasks.json\");\r\n\r\n  if (!response.ok) {\r\n    new Error(response.statusText);\r\n  }\r\n\r\n  return await response.json();\r\n}","import { delay, call, put, select, takeEvery } from \"redux-saga/effects\"\r\nimport { getExampleTasks } from \"./getExampleTasks\"\r\nimport { saveTasksInLocalStorage } from \"./tasksLocalStorage\";\r\nimport {\r\n  fetchExampleTasks,\r\n  fetchExampleTasksFailure,\r\n  fetchExampleTasksSuccess,\r\n  selectTasks\r\n} from \"./tasksSlice\"\r\n\r\nfunction* fetchExampleTasksHandler() {\r\n  try {\r\n    yield delay(1000);\r\n    const exampleTasks = yield call(getExampleTasks);\r\n    yield put(fetchExampleTasksSuccess(exampleTasks));\r\n  } catch {\r\n    yield put(fetchExampleTasksFailure())\r\n    yield call(alert, \"Ups, coś poszło nie tak! 😲\");\r\n  }\r\n};\r\n\r\nfunction* saveTasksInLocalStorageHandler() {\r\n  const tasks = yield select(selectTasks);\r\n  yield call(saveTasksInLocalStorage, tasks);\r\n}\r\n\r\nexport function* tasksSaga() {\r\n  yield takeEvery(fetchExampleTasks.type, fetchExampleTasksHandler);\r\n  yield takeEvery(\"*\", saveTasksInLocalStorageHandler);\r\n}","import { all } from \"@redux-saga/core/effects\";\r\nimport { tasksSaga } from \"./features/tasks/tasksSaga\";\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    tasksSaga(),\r\n  ]);\r\n};","import createSagaMiddleware from \"@redux-saga/core\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport tasksReducer from \"./features/tasks/tasksSlice\";\r\nimport rootSaga from \"./rootSaga\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    tasks: tasksReducer,\r\n  },\r\n  middleware: [sagaMiddleware],\r\n});\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport { theme } from './theme'\r\nimport { GlobalStyle } from './GlobalStyle';\r\nimport store from './store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <ThemeProvider theme={theme}>\r\n        <GlobalStyle />\r\n        <App />\r\n      </ThemeProvider>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","export const theme = {\r\n\tcolors: {\r\n\t\tteal: \"#008080\",\r\n\t\tgallery: \"#EFEFEF\",\r\n\t\twhite: \"#FFFFFF\",\r\n\t\tgreen: \"#008000\",\r\n\t\tcrimson: \"#DB143C\",\r\n\t},\r\n\tbreakpoints: {\r\n\t\tmedium: \"768px\",\r\n\t\tsmall: \"590px\",\r\n\t},\r\n}"],"sourceRoot":""}